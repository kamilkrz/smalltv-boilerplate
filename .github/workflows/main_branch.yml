name: Main Branch CI
permissions:
  contents: read
on:
  push:
    branches: [main]
jobs:
  generate_sem_version:
    name: Generate sem version
    runs-on: ubuntu-latest
    outputs:
      semVersion: ${{ steps.semVersion.outputs.version_tag }}
      majorVersion: v${{ steps.semVersion.outputs.major }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Generate semantic version
        uses: paulhatch/semantic-version@v5.4.0
        id: semVersion
        with:
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          version_format: "${major}.${minor}.${patch}"
          bump_each_commit: false
  build:
    runs-on: ubuntu-latest
    needs: generate_sem_version
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: ${{ runner.os }}-pio
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install PlatformIO Core
        run: pip install --upgrade platformio
      - name: Build PlatformIO Project
        run: pio run
      - name: Tag new target
        env:
          GIT_TAG: ${{needs.generate_sem_version.outputs.semVersion}}
        run: git tag -f "$GIT_TAG" main
      - name: Push new tag
        env:
          GIT_TAG: ${{needs.generate_sem_version.outputs.semVersion}}
        run: git push origin refs/tags/"$GIT_TAG" --force
      - name: GitHub cli release delete if exists
        env:
          GIT_TAG: ${{needs.generate_sem_version.outputs.semVersion}}
          GITHUB_TOKEN: ${{ github.TOKEN }}
        run: |
          gh release delete "${GIT_TAG}" \
          --cleanup-tag \
          --yes \
          --repo "kamilkrz/smalltv-esp8266-boilerplate" || true
      - name: GitHub cli release create
        env:
          GIT_TAG: ${{needs.generate_sem_version.outputs.semVersion}}
          GITHUB_TOKEN: ${{ github.TOKEN }}
        run: |
          gh release create "${GIT_TAG}" \
            --generate-notes \
            --target "main" \
            --repo "kamilkrz/smalltv-esp8266-boilerplate"
            # TODO: add files to release
  docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: [generate_sem_version, build]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Action Doxygen and GitHub Pages
        id: ghaction
        uses: AgarwalSaurav/ghaction-doxygen-ghpages@v2.1.0
        env:
          DOCS_VERSION: ${{needs.generate_sem_version.outputs.semVersion}}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          working-directory: .
          doxyfile-path: Doxyfile
          html-output-folder: docs/html
          branch: docs
